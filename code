import pygame
import random
from pygame.locals import *

pygame.init()

screen = pygame.display.set_mode((1000,500))
pygame.display.set_caption('Evolution, Chandler Supple')

orange_brown = (255, 153, 0)
brown = (153, 51, 0)
light_backing = (255, 255, 102)
dark_brown = (77, 57, 0)
white = (255,255,255)
black = (0,0,0)
blue = (0, 102, 204)
red = (255,0,0)

x = random.randint(100, 1000)
y = random.randint(100, 400)
direct = 'up'

enemy_count = 5
enemy_size = 20
enemy_speed = 3
once = 0
i = 0

clock = pygame.time.Clock()

def gameboard(roll):
        
    for i in range(0, 12):
        pygame.draw.rect(screen, orange_brown, (0, ((i * 20) + (i * 20) + 20), 20, 20), 0)
        pygame.draw.rect(screen, brown, (980, ((i * 20) + (i * 20) + 20), 20, 20), 0)
        pygame.draw.rect(screen, brown, (0, ((i * 20) + (i * 20)), 20, 20), 0)
        pygame.draw.rect(screen, orange_brown, (980, ((i * 20) + (i * 20)), 20, 20), 0)
        
    for i in range(0, 25):
        pygame.draw.rect(screen, orange_brown, (((i * 20) + (i * 20) + 20), 0, 20, 20), 0)
        pygame.draw.rect(screen, orange_brown, (((i * 20) + (i * 20) + 20), 480, 20, 20), 0)
        pygame.draw.rect(screen, brown, (((i * 20) + (i * 20)), 0, 20, 20), 0)
        pygame.draw.rect(screen, brown, (((i * 20) + (i * 20)), 480, 20, 20), 0)
        
        pygame.draw.rect(screen, light_backing, (20, 20, 960, 460), 0)
        
    for i in range(0, 5):
        pygame.draw.rect(screen, dark_brown, ((((150 * i) + ((i * 30) + 65)), (145 + (((-1)**i) * (50))), 150, 210)), 0)
        pygame.draw.rect(screen, orange_brown, ((((150 * i) + ((i * 30) + 65)), (145 + (((-1)**i) * (50))), 150, 210)), 3)
    
    pygame.draw.rect(screen, white, (850, 70, 80, 80), 0)
    pygame.draw.rect(screen, black, (850, 70, 80, 80), 3)
            
    # make dice (number), add title
    
class Sprite:
    def __init__(self, sprite_size, sprite_speed, sprite_sprint_length, direction):
        global x, y, direct
        self.sprite_size = sprite_size
        self.sprite_speed = sprite_speed
        self.sprite_sprint_length = sprite_sprint_length
        self.x = x
        self.y = y
        self.direction = direction
            
        if direction[pygame.K_UP]:
            self.y = self.y - self.sprite_speed
            direct = 'up'
        if direction[pygame.K_DOWN]:
            self.y = self.y + self.sprite_speed
            direct = 'down'            
        if direction[pygame.K_RIGHT]:
            self.x = self.x + self.sprite_speed
            direct = 'right'            
        if direction[pygame.K_LEFT]:
            self.x = self.x - self.sprite_speed
            direct = 'left'        

        if direction[pygame.K_SPACE]:
            if (direct == 'up'):
                if (1/(sprite_sprint_length * 1000) < 1):
                    self.y = self.y - (3 * self.sprite_speed)
            if (direct == 'down'):
                if (1/(sprite_sprint_length * 1000) < 1):
                    self.y = self.y + (3 * self.sprite_speed)
            if (direct == 'right'):
                if (1/(sprite_sprint_length * 1000) < 1):
                    self.x = self.x + (3 * self.sprite_speed)
            if (direct == 'left'):
                if (1/(sprite_sprint_length * 1000) < 1):
                    self.x = self.x - (3 * self.sprite_speed)
            
        if (self.x > 1000):
            self.x = 1000
        if (self.x < 0):
            self.x = 0
        if (self.y > 500):
            self.y = 500
        if (self.y < 0):
            self.y = 0
            
        x = self.x
        y = self.y
            
        sprite = pygame.draw.circle(screen, blue, (self.x, self.y), sprite_size, 0)
        
class Enemy:
    def __init__(self, enemy_size_range, enemy_speed_range, color):
        global x, y, i, once, enemy_x_dict, enemy_y_dict, enemy_count
        
        self.enemy_size_range = enemy_size_range
        self.enemy_speed_range = enemy_speed_range
        self.color = color
        
        dist_x = enemy_x_dict.get('enemy_x%s' % i) - x
        dist_y = enemy_y_dict.get('enemy_y%s' % i) - y
            
        if (dist_x > 0 and dist_x <= 75):
            enemy_x_dict[('enemy_x%s' % i).format(i)] = enemy_x_dict.get('enemy_x%s' % i) - self.enemy_speed_range
            if (dist_y > 0 and dist_y <= 75):
                enemy_y_dict[('enemy_y%s' % i).format(i)] = enemy_y_dict.get('enemy_y%s' % i) - self.enemy_speed_range
            if (dist_y < 0 and dist_y >= -75):
                enemy_y_dict[('enemy_y%s' % i).format(i)] = enemy_y_dict.get('enemy_y%s' % i) + self.enemy_speed_range
            
        if (dist_x < 0 and dist_y >= -75):
            enemy_x_dict[('enemy_x%s' % i).format(i)] = enemy_x_dict.get('enemy_x%s' % i) + self.enemy_speed_range
            if (dist_y > 0 and dist_y <= 75):
                enemy_y_dict[('enemy_y%s' % i).format(i)] = enemy_y_dict.get('enemy_y%s' % i) - self.enemy_speed_range
            if (dist_y < 0 and dist_y >= -75):
                enemy_y_dict[('enemy_y%s' % i).format(i)] = enemy_y_dict.get('enemy_y%s' % i) + self.enemy_speed_range
            
        pygame.draw.circle(screen, self.color, (enemy_x_dict.get('enemy_x%s' % i), enemy_y_dict.get('enemy_y%s' % i)), self.enemy_size_range, 0)        

        i = i + 1
        if (i >= enemy_count):
            i = 0
        
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            
    direction = pygame.key.get_pressed()
          
    if (once == 0):
        
        enemy_x_dict = {}
        enemy_y_dict = {}
        enemy_speed_dict = {}    
        enemy_size_dict = {}
        enemy_dict = {}
        
        for i in range(0, enemy_count):
            x_init = random.randint(50, 950)
            enemy_x_dict[('enemy_x%s' % i).format(i)] = x_init
        for i in range(0, enemy_count):
            y_init = random.randint(50, 450)
            enemy_y_dict[('enemy_y%s' % i).format(i)] = y_init
        for i in range(0, enemy_count):
            enemy_dict[('enemy_class%s' % i).format(i)] = None
        for i in range(0, enemy_count):
            size = random.randint(5, enemy_size)
            enemy_size_dict[('enemy_size%s' % i).format(i)] = size
        for i in range(0, enemy_count):
            speed = random.randint(1, enemy_speed)
            enemy_speed_dict[('enemy_speed%s' % i).format(i)] = speed
            
            once = 1
                        
#    x, y = pygame.mouse.get_pos()
#    print('x: %s' %x)
#    print('y: %s' %y)
        
    gameboard(5)
    sprite = Sprite(10, 5, 10, direction)
    for i in range(0, enemy_count):
        enemy_dict[('enemy_class%s' % i)] = Enemy(enemy_size_dict.get('enemy_size%s' % i), enemy_speed_dict.get('enemy_speed%s' % i), red) 
            
    pygame.display.flip()
    clock.tick(30)
